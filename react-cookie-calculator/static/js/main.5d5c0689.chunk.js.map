{"version":3,"sources":["context.js","Layers/Layers.js","Table/TypeSelector.js","Table/HeightChanger.js","Table/DeleteLayerBtn.js","Table/AddLayerBtn.js","Table/Price.js","Table/Table.js","db/layerTypes.js","db/layers.js","reducer.js","App.js","index.js"],"names":["Context","React","createContext","Layers","props","className","layers","map","layer","style","height","type","Math","floor","random","Selects","dispatch","useContext","onChange","e","payload","layerType","target","value","id","defaultValue","layerTypes","InputHeight","useState","Number","setHeight","updateHeight","min","onClick","disabled","DeleteLayerBtn","length","AddLayerBtn","Price","sum","pricePerLayer","reduce","accumulator","currentValue","Table","state","action","newLayers","JSON","parse","stringify","push","Date","now","filter","item","find","newType","App","initialLayers","localStorage","getItem","dbLayers","useReducer","reducer","useEffect","setItem","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d5c0689.chunk.js","sourcesContent":["import React  from \"react\";\r\nexport const Context = React.createContext();","import { React } from 'react';\r\nimport './layers.css'\r\n\r\nfunction Height(height) {\r\n    return (height * 30) + 'px'\r\n}\r\n\r\nfunction Layers(props) {\r\n    return (\r\n        <div className='col col-md-6'>\r\n            <div className='layers'>{props.layers.map(layer =>\r\n                <div style={{ height: Height(layer.height) }}\r\n                    className={'layer ' + layer.type}\r\n                    key={Math.floor(Math.random() * 1000000)}></div>\r\n            )}\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layers","import { React, useContext } from 'react';\r\nimport { Context } from '../context';\r\n\r\nexport default function Selects(props) {\r\n    const { dispatch } = useContext(Context)\r\n\r\n    return (\r\n        <select\r\n            className=\"form-control form-select mr-2\"\r\n            onChange={(e) => dispatch({\r\n                type: 'updateType',\r\n                payload: { layerType: e.target.value, id: props.layer.id }\r\n            })}\r\n            defaultValue={props.layer.type}\r\n        >\r\n            {\r\n                props.layerTypes.map(layerType =>\r\n                    <option key={Math.floor(Math.random() * 1000000)}>\r\n                        {layerType.type}\r\n                    </option>)\r\n            }\r\n        </select >\r\n    )\r\n}","import { React, useState, useContext } from 'react';\r\nimport { Context } from '../context';\r\n\r\nexport default function InputHeight(props) {\r\n    const { dispatch } = useContext(Context)\r\n    let [height, setHeight] = useState(Number(props.layer.height))\r\n\r\n    function updateHeight(height) {\r\n        if (height > 0) {\r\n            setHeight(height)\r\n            dispatch({\r\n                type: 'updateHeight',\r\n                payload: {\r\n                    id: props.layer.id,\r\n                    height: height\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex\">\r\n            <input className=\"form-control\" type='number' id=\"layerHeight\" min={Number(1)}\r\n                value={height ? height : 1}\r\n                onChange={(e) => {\r\n                    updateHeight(e, e.target.value)\r\n                }}\r\n            />\r\n            <button className=\"btn btn-success ml-2 mr-2 \"\r\n                onClick={() => {\r\n                    updateHeight(height + 1)\r\n                }} >\r\n                +\r\n            </button>\r\n            <button\r\n                className=\"btn btn-primary  mr-2\"\r\n                disabled={height === 1}\r\n                onClick={() => {\r\n                    updateHeight(height - 1)\r\n                }}>\r\n                -\r\n            </button>\r\n        </div >\r\n    )\r\n}","import { React, useContext } from 'react';\r\nimport { Context } from '../context';\r\n\r\nexport default function DeleteLayerBtn(props) {\r\n    const { dispatch } = useContext(Context)\r\n\r\n    return (\r\n        <button className='btn btn-danger delete-layer-btn'\r\n            disabled={props.layers.length === 1}\r\n            onClick={() => dispatch({\r\n                type: 'delete',\r\n                payload: {\r\n                    id: props.layer.id\r\n                }\r\n            })}\r\n        >\r\n            delete\r\n        </button>\r\n    )\r\n}","import { React, useContext } from 'react';\r\nimport { Context } from '../context';\r\n\r\nexport default function AddLayerBtn(props) {\r\n    const { dispatch } = useContext(Context)\r\n\r\n    return (\r\n        <button id=\"addLayerBtn\" className=\" btn btn-primary mb-2\"\r\n            onClick={() => dispatch({\r\n                type: 'add'\r\n            }\r\n            )}>\r\n            Add layer\r\n        </button >\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Price(props) {\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n    const arr = props.layers.map(layer => layer.pricePerLayer * layer.height)\r\n    const sum = arr.reduce(reducer)\r\n\r\n    return (\r\n        <div className=\"ml-2\">\r\n            <p  className=\"btn btn-info text-white\">Price : {sum} $</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './table.css'\r\nimport TypeSelector from './TypeSelector'\r\nimport HeightChanger from './HeightChanger';\r\nimport DeleteLayerBtn from './DeleteLayerBtn'\r\nimport AddLayerBtn from './AddLayerBtn'\r\nimport Price from './Price';\r\n\r\nexport default function Table(props) {\r\n    return (\r\n        <div className='col col-md-6'>\r\n            <div className=\"d-flex top-line\">\r\n                <AddLayerBtn />\r\n                <Price layers={props.layers} />\r\n            </div>\r\n\r\n            {props.layers.map(layer => {\r\n                return (\r\n                    <div key={Math.floor(Math.random() * 1000000)} >\r\n                        <div className='d-flex input-group mb-2'>\r\n                            <TypeSelector layer={layer} layerTypes={props.layerTypes} />\r\n                            <HeightChanger layer={layer} />\r\n                            <DeleteLayerBtn layer={layer} layers={props.layers} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}","let layerTypes = [\r\n  {\r\n    type: \"layer-cherry\",\r\n    pricePerLayer: 1,\r\n    height: 1,\r\n  },\r\n  {\r\n    type: \"layer-chocolate\",\r\n    pricePerLayer: 10,\r\n    height: 1,\r\n  },\r\n  {\r\n    type: \"layer-banana\",\r\n    pricePerLayer: 100,\r\n    height: 1,\r\n  },\r\n]\r\n\r\nexport default layerTypes;","let layers = [\r\n    {\r\n        type: \"layer-cherry\",\r\n        pricePerLayer: 10,\r\n        height: 3,\r\n        id: 1,\r\n    },\r\n    {\r\n        type: \"layer-chocolate\",\r\n        pricePerLayer: 20,\r\n        height: 2,\r\n        id: 2,\r\n    },\r\n    {\r\n        type: \"layer-banana\",\r\n        pricePerLayer: 30,\r\n        height: 1,\r\n        id: 3,\r\n    },\r\n    {\r\n        type: \"layer-banana\",\r\n        pricePerLayer: 30,\r\n        height: 1,\r\n        id: 4,\r\n    },\r\n]\r\n\r\nexport default layers","import layerTypes from './db/layerTypes';\r\n\r\nexport default function (state, action) {\r\n    let newLayers = JSON.parse(JSON.stringify(state))\r\n\r\n    switch (action.type) {\r\n        default: return state\r\n\r\n        case 'add': {\r\n            newLayers.push({ ...layerTypes[0], id: Date.now() })\r\n\r\n            return newLayers\r\n        }\r\n\r\n        case 'delete': {\r\n            newLayers = newLayers.length > 1 ? newLayers.filter(item => item.id != action.payload.id) : newLayers\r\n\r\n            return newLayers\r\n        }\r\n\r\n        case 'updateType': {\r\n            let layer = newLayers.find(layer => layer.id === action.payload.id)\r\n            let newType = layerTypes.find(layerType => layerType.type == action.payload.layerType)\r\n            layer.type = newType.type\r\n            layer.pricePerLayer = newType.pricePerLayer\r\n\r\n            return newLayers\r\n        }\r\n\r\n        case 'updateHeight': {\r\n            let layer = newLayers.find(layer => layer.id === action.payload.id)\r\n            layer.height = Number(action.payload.height)\r\n\r\n            return newLayers\r\n        }\r\n\r\n    }\r\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { React, useReducer, useEffect } from 'react';\nimport { Context } from './context'\nimport './App.css';\n\nimport Layers from './Layers/Layers';\nimport Table from './Table/Table';\nimport layerTypes from './db/layerTypes';\nimport dbLayers from './db/layers';\nimport reducer from './reducer';\n\nfunction App() {\n  const initialLayers = localStorage.getItem('layers') || JSON.stringify(dbLayers)\n  const [state, dispatch] = useReducer(reducer, JSON.parse(initialLayers))\n\n  useEffect(() => {\n    localStorage.setItem('layers', JSON.stringify(state))\n  }, [state])\n\n  return (\n    <Context.Provider value={{\n      dispatch\n    }}>\n      <div className=\"App \">\n        <div className=\"container\">\n          <div className='row d-flex pt-5 justify-content-between' >\n            <Layers layers={state} />\n            <Table layers={state} layerTypes={layerTypes} />\n          </div>\n        </div>\n      </div>\n    </Context.Provider>\n  )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}