{"version":3,"sources":["Components/Layers.js","Components/Selects.js","Components/InputHeight.js","Components/DeleteLayerBtn.js","Components/AddLayerBtn.js","Components/Price.js","Components/Table.js","db/layerTypes.js","db/layers.js","App.js","index.js"],"names":["Layers","props","className","layers","map","layer","style","height","type","Math","floor","random","Selects","class","onChange","e","updateLayerType","target","value","id","defaultValue","layerTypes","layerType","InputHeight","useState","Number","setHeight","min","updateLayerHeight","onClick","disabled","DeleteLayerBtn","deleteLayer","length","AddLayerBtn","addLayer","Price","sum","pricePerLayer","reduce","accumulator","currentValue","Table","api","App","JSON","parse","stringify","state","newLayer","push","setState","filter","find","newType","Type","counter","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d010076.chunk.js","sourcesContent":["import { React} from 'react';\r\nimport '../style/layers.css'\r\n\r\nfunction Height(height) {\r\n    return (height * 30) + 'px'\r\n}\r\n\r\nfunction Layers(props) {\r\n    return (\r\n        <div className='layers'>{props.layers.map(layer =>\r\n            <div style={{ height: Height(layer.height) }} className={'layer ' + layer.type} key={Math.floor(Math.random() * 1000000)}>zxc</div>\r\n        )\r\n        }</div >\r\n    )\r\n}\r\n\r\nexport default Layers","import { React } from 'react';\r\n\r\nexport default function Selects(props) {\r\n    return (\r\n        <select\r\n            class=\"form-control form-select mr-2\"\r\n            onChange={(e) => props.updateLayerType(e.target.value, props.layer.id)}\r\n            defaultValue={props.layer.type}\r\n        >\r\n            {props.layerTypes.map(layerType =>\r\n                <option key={Math.floor(Math.random() * 1000000)}>\r\n                    {layerType.type}\r\n                </option>)\r\n            }\r\n        </select>\r\n    )\r\n}","import { React, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function InputHeight(props) {\r\n    let [height, setHeight] = useState(Number(props.layer.height))\r\n\r\n    return (\r\n\r\n        <div className=\"d-flex\">\r\n            <input class=\"form-control\" type='number' id=\"layerHeight\" min={1}\r\n                value={height}\r\n                onChange={(e) => {\r\n                    setHeight(e.target.value)\r\n                    props.updateLayerHeight(e.target.value, props.layer.id)\r\n                }}\r\n            />\r\n            <button class=\"btn btn-success ml-2 mr-2 \" onClick={() => {\r\n                setHeight(height + 1)\r\n                props.updateLayerHeight(height + 1, props.layer.id)\r\n            }} >\r\n                +\r\n            </button>\r\n            <button\r\n                class=\"btn btn-primary  mr-2\"\r\n                disabled={height == 1}\r\n                onClick={() => {\r\n                    setHeight(height - 1)\r\n                    props.updateLayerHeight(height - 1, props.layer.id)\r\n                }}>\r\n                -\r\n            </button>\r\n\r\n\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function DeleteLayerBtn(props) {\r\n    return (\r\n        <button className='btn btn-danger delete-layer-btn' onClick={() => props.deleteLayer(props.layer.id)} disabled={props.layers.length == 1} >\r\n            delete\r\n        </button>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function AddLayerBtn(props) {\r\n    return (\r\n        <button id=\"addLayerBtn\" className=\" btn btn-primary mb-2\" onClick={() => props.addLayer()} >\r\n            Add layer\r\n        </button >\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Price(props) {\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n    const arr = props.layers.map(layer => layer.pricePerLayer * layer.height)\r\n    const sum = arr.reduce(reducer)\r\n\r\n    return (\r\n        <div className=\"ml-2\">\r\n            <p  className=\"btn btn-info text-white\">Price : {sum} $</p>\r\n        </div>\r\n    )\r\n}","import { React } from 'react';\r\nimport '../style/table.css'\r\nimport Selects from './Selects'\r\nimport InputHeight from './InputHeight';\r\nimport DeleteLayerBtn from './DeleteLayerBtn'\r\nimport AddLayerBtn from './AddLayerBtn'\r\nimport Price from './Price';\r\n\r\nexport default function Table(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex top-line\">\r\n                <AddLayerBtn addLayer={props.api.addLayer} />\r\n                <Price layers={props.layers} />\r\n            </div>\r\n\r\n            {props.layers.map(layer => {\r\n                return (\r\n                    <div key={Math.floor(Math.random() * 1000000)} >\r\n                        <div className='d-flex input-group mb-2'>\r\n                            <Selects layer={layer} updateLayerType={props.api.updateLayerType} layerTypes={props.layerTypes} />\r\n                            <InputHeight layer={layer} updateLayerHeight={props.api.updateLayerHeight} />\r\n                            <DeleteLayerBtn layer={layer} deleteLayer={props.api.deleteLayer} layers={props.layers} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}","let layerTypes = [\r\n  {\r\n    type: \"layer-cherry\",\r\n    pricePerLayer: 10,\r\n    height: 1,\r\n  },\r\n  {\r\n    type: \"layer-chocolate\",\r\n    pricePerLayer: 20,\r\n    height: 1,\r\n  },\r\n  {\r\n    type: \"layer-banana\",\r\n    pricePerLayer: 30,\r\n    height: 1,\r\n  },\r\n]\r\n\r\nexport default layerTypes;","let layers = [\r\n    {\r\n        type: \"layer-cherry\",\r\n        pricePerLayer: 10,\r\n        height: 3,\r\n        id: 1,\r\n    },\r\n    {\r\n        type: \"layer-chocolate\",\r\n        pricePerLayer: 20,\r\n        height: 2,\r\n        id: 2,\r\n    },\r\n    {\r\n        type: \"layer-banana\",\r\n        pricePerLayer: 30,\r\n        height: 1,\r\n        id: 3,\r\n    },\r\n]\r\n\r\nexport default layers","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/main.css'\nimport Layers from './Components/Layers';\nimport Table from './Components/Table';\nimport layerTypes from './db/layerTypes';\nimport layers from './db/layers';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      layers: layers,\n      layerTypes: layerTypes,\n      counter: 0\n    }\n  }\n\n  api = {\n    addLayer: () => {\n      let layers = JSON.parse(JSON.stringify(this.state.layers))\n      let newLayer = layerTypes[0]\n      newLayer.id = this.state.layers.length + 1\n      layers.push(newLayer)\n      this.setState({ layers: layers })\n    },\n    deleteLayer: (id) => {\n      let layers = JSON.parse(JSON.stringify(this.state.layers))\n      layers = layers.filter(layer => layer.id !== id)\n      this.setState({ layers: layers })\n    },\n    updateLayerType: (type, id) => {\n      let layers = JSON.parse(JSON.stringify(this.state.layers))\n      let layer = layers.find(layer => layer.id === id)\n      let newType = layerTypes.find(Type => Type.type == type)\n      layer.type = newType.type\n      layer.pricePerLayer = newType.pricePerLayer\n      this.setState({ layers: layers })\n    },\n    updateLayerHeight: (value, id) => {\n      let layers = JSON.parse(JSON.stringify(this.state.layers))\n      let layer = layers.find(layer => layer.id === id)\n      layer.height = value\n      this.setState({ layers: layers })\n    },\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className='row d-flex pt-5 justify-content-between' >\n            <div className='col col-md-6'> <Layers layers={this.state.layers} api={this.api} /></div>\n            <div className='col col-md-6'><Table layers={this.state.layers} layerTypes={this.state.layerTypes} api={this.api} /></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}